{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Danie/Desktop/Apps/arabic-to-english/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"C:/Users/Danie/Desktop/Apps/arabic-to-english/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Danie/Desktop/Apps/arabic-to-english/node_modules/@babel/runtime/helpers/esm/createClass.js\";var JSONData=/*#__PURE__*/function(){function JSONData(data){_classCallCheck(this,JSONData);this.data=this.removeDuplicateTexts(data);}_createClass(JSONData,[{key:\"removeDuplicateTexts\",value:function removeDuplicateTexts(data){var uniqueTexts=new Set();var newData=[];for(var i=0;i<data.length;i++){var section=data[i];if(section.text&&!uniqueTexts.has(section.text)){newData.push(section);uniqueTexts.add(section.text);}else if(section.text){console.log(\"Duplicate text section found: \\\"\".concat(section.text,\"\\\"\"));}else if(section.questions){newData.push(section);}}// console.log(newData);\nreturn newData;}},{key:\"getQuestions\",value:function getQuestions(){var questions=[];for(var i=0;i<this.data.length;i++){var section=this.data[i];if(section.questions){questions.push.apply(questions,_toConsumableArray(section.questions));}}return questions;}},{key:\"getTexts\",value:function getTexts(){var texts=[];for(var i=0;i<this.data.length;i++){var section=this.data[i];if(section.text){texts.push(section.text);}}return texts;}},{key:\"getTextsLength\",value:function getTextsLength(){var lengths=[];for(var i=0;i<this.data.length;i++){var section=this.data[i];if(section.text){lengths.push(section.text.length);}}return lengths;}},{key:\"getTextsLengthRanking\",value:function getTextsLengthRanking(){var lengths=this.getTextsLength();var sortedLengths=lengths.slice().sort(function(a,b){return b-a;});var ranking=[];for(var i=0;i<sortedLengths.length;i++){var length=sortedLengths[i];var index=lengths.indexOf(length);var text=this.data[index].text;ranking.push({text:text,length:length});}return ranking;}}]);return JSONData;}();export default JSONData;// const jsonDataObj = new JSONData(jsonData);\n//   console.log(jsonDataObj.getQuestions()); // prints an array of all questions in the JSON data\n//   console.log(jsonDataObj.getTexts()); // prints an array of all text sections in the JSON data\n//   console.log(jsonDataObj.getTextsLength()); // prints an array of the length of each \"text\" section in the JSON data\n// console.log(jsonDataObj.getTextsLengthRanking()); // prints an array of objects containing the \"text\" and length of each section, ranked from high to low","map":{"version":3,"names":["JSONData","data","_classCallCheck","removeDuplicateTexts","_createClass","key","value","uniqueTexts","Set","newData","i","length","section","text","has","push","add","console","log","concat","questions","getQuestions","apply","_toConsumableArray","getTexts","texts","getTextsLength","lengths","getTextsLengthRanking","sortedLengths","slice","sort","a","b","ranking","index","indexOf"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/functions/exerciseLevelTracker.js"],"sourcesContent":["class JSONData {\r\n  constructor(data) {\r\n    this.data = this.removeDuplicateTexts(data);\r\n  }\r\n\r\n  removeDuplicateTexts(data) {\r\n    const uniqueTexts = new Set();\r\n    const newData = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      const section = data[i];\r\n\r\n      if (section.text && !uniqueTexts.has(section.text)) {\r\n        newData.push(section);\r\n        uniqueTexts.add(section.text);\r\n      } else if (section.text) {\r\n        console.log(`Duplicate text section found: \"${section.text}\"`);\r\n      } else if (section.questions) {\r\n        newData.push(section);\r\n      }\r\n    }\r\n    // console.log(newData);\r\n    return newData;\r\n  }\r\n\r\n  getQuestions() {\r\n    const questions = [];\r\n\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const section = this.data[i];\r\n\r\n      if (section.questions) {\r\n        questions.push(...section.questions);\r\n      }\r\n    }\r\n\r\n    return questions;\r\n  }\r\n\r\n  getTexts() {\r\n    const texts = [];\r\n\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const section = this.data[i];\r\n\r\n      if (section.text) {\r\n        texts.push(section.text);\r\n      }\r\n    }\r\n\r\n    return texts;\r\n  }\r\n\r\n  getTextsLength() {\r\n    const lengths = [];\r\n\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const section = this.data[i];\r\n\r\n      if (section.text) {\r\n        lengths.push(section.text.length);\r\n      }\r\n    }\r\n\r\n    return lengths;\r\n  }\r\n\r\n  getTextsLengthRanking() {\r\n    const lengths = this.getTextsLength();\r\n    const sortedLengths = lengths.slice().sort((a, b) => b - a);\r\n    const ranking = [];\r\n\r\n    for (let i = 0; i < sortedLengths.length; i++) {\r\n      const length = sortedLengths[i];\r\n      const index = lengths.indexOf(length);\r\n      const text = this.data[index].text;\r\n      ranking.push({ text, length });\r\n    }\r\n\r\n    return ranking;\r\n  }\r\n}\r\n\r\nexport default JSONData;\r\n\r\n// const jsonDataObj = new JSONData(jsonData);\r\n//   console.log(jsonDataObj.getQuestions()); // prints an array of all questions in the JSON data\r\n//   console.log(jsonDataObj.getTexts()); // prints an array of all text sections in the JSON data\r\n//   console.log(jsonDataObj.getTextsLength()); // prints an array of the length of each \"text\" section in the JSON data\r\n// console.log(jsonDataObj.getTextsLengthRanking()); // prints an array of objects containing the \"text\" and length of each section, ranked from high to low\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}