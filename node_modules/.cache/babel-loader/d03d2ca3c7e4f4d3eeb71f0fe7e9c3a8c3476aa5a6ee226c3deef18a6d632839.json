{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\Reading\\\\ReadingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getRandomData, resetExerciseData, saveExerciseData } from \"./ExerciseData\";\nimport Introduction from \"./Introduction\";\nimport Exercise from \"./Exercise\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReadingExercise() {\n  _s();\n  const [exercise, setExercise] = useState(null);\n  const [score, setScore] = useState(0);\n  const startExercise = () => {\n    const randomData = getRandomData(score);\n    if (!randomData) {\n      resetExerciseData();\n      setExercise(null);\n      return;\n    }\n    setExercise(randomData);\n  };\n  const handleSubmit = (e, answers) => {\n    e.preventDefault();\n    if (!exercise || exercise.submitted) {\n      return;\n    }\n    const totalQuestions = exercise.questions.length;\n    const tempScore = answers.reduce((acc, answer, index) => {\n      return answer === exercise.questions[index].answer ? acc + 1 : acc;\n    }, 0);\n    const percentage = Math.round(tempScore / totalQuestions * 100);\n    setScore(prevScore => prevScore + tempScore);\n    const updatedExercise = {\n      ...exercise,\n      answers,\n      percentage,\n      submitted: true\n    };\n    setExercise(updatedExercise);\n    saveExerciseData(updatedExercise.text, updatedExercise.questions, updatedExercise.answers, updatedExercise.percentage);\n  };\n  const resetAnswers = () => {\n    const newAnswers = new Array(exercise.questions.length).fill(\"\");\n    const updatedExercise = {\n      ...exercise,\n      answers: newAnswers,\n      submitted: false\n    };\n    setExercise(updatedExercise);\n  };\n  const isSubmitDisabled = exercise ? exercise.answers.includes(\"\") : true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reading Comprehension Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), exercise ? /*#__PURE__*/_jsxDEV(Exercise, {\n      text: exercise.text,\n      questions: exercise.questions,\n      answers: exercise.answers,\n      submitted: exercise.submitted,\n      handleAnswerChange: (e, index) => {\n        const newAnswers = [...exercise.answers];\n        newAnswers[index] = e.target.value;\n        const updatedExercise = {\n          ...exercise,\n          answers: newAnswers\n        };\n        setExercise(updatedExercise);\n      },\n      handleSubmit: handleSubmit,\n      isSubmitDisabled: isSubmitDisabled,\n      score: score,\n      resetAnswers: resetAnswers,\n      startExercise: startExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Introduction, {\n      startExercise: startExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ReadingExercise, \"s4inAndEkAwQcTKogK1uRrM3nBg=\");\n_c = ReadingExercise;\nexport default ReadingExercise;\nvar _c;\n$RefreshReg$(_c, \"ReadingExercise\");","map":{"version":3,"names":["React","useState","getRandomData","resetExerciseData","saveExerciseData","Introduction","Exercise","jsxDEV","_jsxDEV","ReadingExercise","_s","exercise","setExercise","score","setScore","startExercise","randomData","handleSubmit","e","answers","preventDefault","submitted","totalQuestions","questions","length","tempScore","reduce","acc","answer","index","percentage","Math","round","prevScore","updatedExercise","text","resetAnswers","newAnswers","Array","fill","isSubmitDisabled","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAnswerChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/Reading/ReadingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  getRandomData,\r\n  resetExerciseData,\r\n  saveExerciseData,\r\n} from \"./ExerciseData\";\r\nimport Introduction from \"./Introduction\";\r\nimport Exercise from \"./Exercise\";\r\n\r\nfunction ReadingExercise() {\r\n  const [exercise, setExercise] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const startExercise = () => {\r\n    const randomData = getRandomData(score);\r\n\r\n    if (!randomData) {\r\n      resetExerciseData();\r\n      setExercise(null);\r\n      return;\r\n    }\r\n\r\n    setExercise(randomData);\r\n  };\r\n\r\n  const handleSubmit = (e, answers) => {\r\n    e.preventDefault();\r\n\r\n    if (!exercise || exercise.submitted) {\r\n      return;\r\n    }\r\n\r\n    const totalQuestions = exercise.questions.length;\r\n    const tempScore = answers.reduce((acc, answer, index) => {\r\n      return answer === exercise.questions[index].answer ? acc + 1 : acc;\r\n    }, 0);\r\n    const percentage = Math.round((tempScore / totalQuestions) * 100);\r\n\r\n    setScore((prevScore) => prevScore + tempScore);\r\n    const updatedExercise = { ...exercise, answers, percentage, submitted: true };\r\n    setExercise(updatedExercise);\r\n    saveExerciseData(updatedExercise.text, updatedExercise.questions, updatedExercise.answers, updatedExercise.percentage);\r\n  };\r\n\r\n  const resetAnswers = () => {\r\n    const newAnswers = new Array(exercise.questions.length).fill(\"\");\r\n    const updatedExercise = { ...exercise, answers: newAnswers, submitted: false };\r\n    setExercise(updatedExercise);\r\n  };\r\n\r\n  const isSubmitDisabled = exercise ? exercise.answers.includes(\"\") : true;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Reading Comprehension Exercise</h1>\r\n\r\n      {exercise ? (\r\n        <Exercise\r\n          text={exercise.text}\r\n          questions={exercise.questions}\r\n          answers={exercise.answers}\r\n          submitted={exercise.submitted}\r\n          handleAnswerChange={(e, index) => {\r\n            const newAnswers = [...exercise.answers];\r\n            newAnswers[index] = e.target.value;\r\n            const updatedExercise = { ...exercise, answers: newAnswers };\r\n            setExercise(updatedExercise);\r\n          }}\r\n          handleSubmit={handleSubmit}\r\n          isSubmitDisabled={isSubmitDisabled}\r\n          score={score}\r\n          resetAnswers={resetAnswers}\r\n          startExercise={startExercise}\r\n        />\r\n      ) : (\r\n        <Introduction startExercise={startExercise} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}