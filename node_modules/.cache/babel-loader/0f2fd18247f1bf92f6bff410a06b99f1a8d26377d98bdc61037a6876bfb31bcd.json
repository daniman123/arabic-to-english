{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\WritingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport exerciseData from \"../data/writingData/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingExercise = () => {\n  _s();\n  const [exercise, setExercise] = useState({\n    index: 0,\n    sentence: \"\",\n    choices: \"\"\n  });\n  const {\n    sentence,\n    choices\n  } = exercise;\n  const startExercise = () => {\n    const index = getRandomIndex();\n    setExercise({\n      index,\n      sentence: exerciseData[index].sentence,\n      choices: exerciseData[index].choices\n    });\n  };\n  const getRandomIndex = () => {\n    return Math.floor(Math.random() * exerciseData.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WritingExercise__container\",\n    children: sentence ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writingExercise\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: sentence.split(\" \").map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://translate.google.com/#en/ar/${word}`,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), choices.map(choice => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [choice.number, \". \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), choice.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), option]\n        }, optionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this))]\n      }, choice.number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startExercise,\n        children: \"Next Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startExercise,\n      children: \"Start Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingExercise, \"gglovTdf/TQukufCL+dCAfTBQaw=\");\n_c = WritingExercise;\nexport default WritingExercise;\nvar _c;\n$RefreshReg$(_c, \"WritingExercise\");","map":{"version":3,"names":["React","useState","exerciseData","jsxDEV","_jsxDEV","WritingExercise","_s","exercise","setExercise","index","sentence","choices","startExercise","getRandomIndex","Math","floor","random","length","className","children","split","map","word","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","choice","number","options","option","optionIndex","type","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/WritingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport exerciseData from \"../data/writingData/data.json\";\r\n\r\nconst WritingExercise = () => {\r\n  const [exercise, setExercise] = useState({\r\n    index: 0,\r\n    sentence: \"\",\r\n    choices: \"\",\r\n  });\r\n\r\n  const { sentence, choices } = exercise;\r\n\r\n  const startExercise = () => {\r\n    const index = getRandomIndex();\r\n    setExercise({\r\n      index,\r\n      sentence: exerciseData[index].sentence,\r\n      choices: exerciseData[index].choices,\r\n    });\r\n  };\r\n\r\n  const getRandomIndex = () => {\r\n    return Math.floor(Math.random() * exerciseData.length);\r\n  };\r\n  return (\r\n    <div className=\"WritingExercise__container\">\r\n      {sentence ? (\r\n        <div className=\"writingExercise\">\r\n          <p>\r\n            {sentence.split(\" \").map((word, index) => (\r\n              <span key={index}>\r\n                <a\r\n                  href={`https://translate.google.com/#en/ar/${word}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  {word}\r\n                </a>{\" \"}\r\n              </span>\r\n            ))}\r\n          </p>\r\n          {choices.map((choice) => (\r\n            <div key={choice.number}>\r\n              <p>{choice.number}. </p>\r\n              {choice.options.map((option, optionIndex) => (\r\n                <label key={optionIndex}>\r\n                  <input type=\"radio\" value={option} />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          ))}\r\n          <button onClick={startExercise}>Next Exercise</button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={startExercise}>Start Exercise</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default WritingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}