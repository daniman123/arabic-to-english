{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\Writing\\\\WritingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport exerciseData from \"../../data/writingData/data.json\";\nimport \"./WritingExercise.css\";\nimport StartExercise from \"./StartExercise\";\nimport ExerciseSentence from \"./ExerciseSentence\";\nimport ExerciseChoices from \"./ExerciseChoices\";\nimport ExerciseResult from \"./ExerciseResult\";\nimport { getRandomIndex, handleAnswerChange, getAnswerClass } from \"./WritingExerciseUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingExercise = () => {\n  _s();\n  const [exercise, setExercise] = useState({});\n  const [answers, setAnswers] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  const startExercise = () => {\n    const index = getRandomIndex(exerciseData);\n    const currentExercise = exerciseData[index];\n    setExercise({\n      index,\n      sentence: currentExercise.sentence,\n      choices: currentExercise.choices\n    });\n    setAnswers([]);\n    setSubmitted(false);\n  };\n  const isSubmitDisabled = answers.includes(\"\");\n  const submitAnswers = e => {\n    e.preventDefault();\n    setSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WritingExercise__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Writing Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), exercise.sentence ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writingExercise\",\n      children: [/*#__PURE__*/_jsxDEV(ExerciseSentence, {\n        sentence: exercise.sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExerciseChoices, {\n        choices: exercise.choices,\n        answers: answers,\n        submitted: submitted,\n        handleAnswerChange: (e, index) => handleAnswerChange(e, index, setAnswers, answers),\n        getAnswerClass: getAnswerClass,\n        submitAnswers: submitAnswers,\n        isSubmitDisabled: isSubmitDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), submitted && /*#__PURE__*/_jsxDEV(ExerciseResult, {\n        startExercise: startExercise,\n        submitted: submitted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StartExercise, {\n      startExercise: startExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingExercise, \"Ld50+GshUNT3WujUu5Ntq+wko28=\");\n_c = WritingExercise;\nexport default WritingExercise;\nvar _c;\n$RefreshReg$(_c, \"WritingExercise\");","map":{"version":3,"names":["React","useState","exerciseData","StartExercise","ExerciseSentence","ExerciseChoices","ExerciseResult","getRandomIndex","handleAnswerChange","getAnswerClass","jsxDEV","_jsxDEV","WritingExercise","_s","exercise","setExercise","answers","setAnswers","submitted","setSubmitted","startExercise","index","currentExercise","sentence","choices","isSubmitDisabled","includes","submitAnswers","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/Writing/WritingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport exerciseData from \"../../data/writingData/data.json\";\r\nimport \"./WritingExercise.css\";\r\n\r\nimport StartExercise from \"./StartExercise\";\r\nimport ExerciseSentence from \"./ExerciseSentence\";\r\nimport ExerciseChoices from \"./ExerciseChoices\";\r\nimport ExerciseResult from \"./ExerciseResult\";\r\nimport {\r\n  getRandomIndex,\r\n  handleAnswerChange,\r\n  getAnswerClass,\r\n} from \"./WritingExerciseUtils\";\r\n\r\nconst WritingExercise = () => {\r\n  const [exercise, setExercise] = useState({});\r\n  const [answers, setAnswers] = useState([]);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const startExercise = () => {\r\n    const index = getRandomIndex(exerciseData);\r\n    const currentExercise = exerciseData[index];\r\n    setExercise({\r\n      index,\r\n      sentence: currentExercise.sentence,\r\n      choices: currentExercise.choices,\r\n    });\r\n    setAnswers([]);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const isSubmitDisabled = answers.includes(\"\");\r\n\r\n  const submitAnswers = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"WritingExercise__container\">\r\n      <h1>Writing Exercise</h1>\r\n      {exercise.sentence ? (\r\n        <div className=\"writingExercise\">\r\n          <ExerciseSentence sentence={exercise.sentence} />\r\n          <ExerciseChoices\r\n            choices={exercise.choices}\r\n            answers={answers}\r\n            submitted={submitted}\r\n            handleAnswerChange={(e, index) =>\r\n              handleAnswerChange(e, index, setAnswers, answers)\r\n            }\r\n            getAnswerClass={getAnswerClass}\r\n            submitAnswers={submitAnswers}\r\n            isSubmitDisabled={isSubmitDisabled}\r\n          />\r\n\r\n          {submitted && (\r\n            <ExerciseResult\r\n              startExercise={startExercise}\r\n              submitted={submitted}\r\n            />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <StartExercise startExercise={startExercise} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}