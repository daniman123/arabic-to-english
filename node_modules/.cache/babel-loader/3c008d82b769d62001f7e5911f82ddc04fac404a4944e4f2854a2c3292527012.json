{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\WritingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FillInTheBlanks(_ref) {\n  _s();\n  let {\n    sentences\n  } = _ref;\n  const [currentSentence, setCurrentSentence] = useState(getRandomSentence());\n  function getRandomSentence() {\n    const randomIndex = Math.floor(Math.random() * sentences.length);\n    return sentences[randomIndex];\n  }\n  function handleAnswerClick(isCorrect) {\n    if (isCorrect) {\n      // handle correct answer\n      setCurrentSentence(getRandomSentence());\n    } else {\n      // handle incorrect answer\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentSentence.sentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), currentSentence.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswerClick(choice.isCorrect),\n      children: choice.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(FillInTheBlanks, \"88QLjIdm2+azLBLfuL1upPgtiP4=\");\n_c = FillInTheBlanks;\nexport default FillInTheBlanks;\nvar _c;\n$RefreshReg$(_c, \"FillInTheBlanks\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FillInTheBlanks","_ref","_s","sentences","currentSentence","setCurrentSentence","getRandomSentence","randomIndex","Math","floor","random","length","handleAnswerClick","isCorrect","children","sentence","fileName","_jsxFileName","lineNumber","columnNumber","choices","map","choice","index","onClick","label","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/WritingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction FillInTheBlanks({ sentences }) {\r\n  const [currentSentence, setCurrentSentence] = useState(getRandomSentence());\r\n\r\n  function getRandomSentence() {\r\n    const randomIndex = Math.floor(Math.random() * sentences.length);\r\n    return sentences[randomIndex];\r\n  }\r\n\r\n  function handleAnswerClick(isCorrect) {\r\n    if (isCorrect) {\r\n      // handle correct answer\r\n      setCurrentSentence(getRandomSentence());\r\n    } else {\r\n      // handle incorrect answer\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>{currentSentence.sentence}</p>\r\n      {currentSentence.choices.map((choice, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => handleAnswerClick(choice.isCorrect)}\r\n        >\r\n          {choice.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FillInTheBlanks;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAACS,iBAAiB,EAAE,CAAC;EAE3E,SAASA,iBAAiBA,CAAA,EAAG;IAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,SAAS,CAACQ,MAAM,CAAC;IAChE,OAAOR,SAAS,CAACI,WAAW,CAAC;EAC/B;EAEA,SAASK,iBAAiBA,CAACC,SAAS,EAAE;IACpC,IAAIA,SAAS,EAAE;MACb;MACAR,kBAAkB,CAACC,iBAAiB,EAAE,CAAC;IACzC,CAAC,MAAM;MACL;IAAA;EAEJ;EAEA,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAIV,eAAe,CAACW;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAChCf,eAAe,CAACgB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzCxB,OAAA;MAEEyB,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACU,MAAM,CAACT,SAAS,CAAE;MAAAC,QAAA,EAElDQ,MAAM,CAACG;IAAK,GAHRF,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACjB,EAAA,CA9BQF,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AAgCxB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}