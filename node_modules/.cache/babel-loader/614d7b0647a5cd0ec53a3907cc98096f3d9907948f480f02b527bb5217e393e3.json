{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\WritingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport exerciseData from \"../data/writingData/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingExercise = () => {\n  _s();\n  const [answers, setAnswers] = useState(exerciseData.sentences[0].blanks.reduce((acc, curr) => {\n    acc[`blank${curr.number}`] = \"\";\n    return acc;\n  }, {}));\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Check if the answers are correct\n    const correctAnswers = exerciseData.sentences[0].blanks.reduce((acc, curr) => {\n      acc[`blank${curr.number}`] = curr.options[0];\n      return acc;\n    }, {});\n    if (JSON.stringify(answers) === JSON.stringify(correctAnswers)) {\n      alert(\"Congratulations, you have completed the exercise!\");\n    } else {\n      alert(\"Sorry, some of your answers are incorrect. Please try again!\");\n    }\n  };\n  const handleChange = event => {\n    setAnswers({\n      ...answers,\n      [event.target.name]: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: exerciseData.sentences[0].text.split(\"_\").map((word, index) => {\n        if (index === exerciseData.sentences[0].text.split(\"_\").length - 1) {\n          return word;\n        } else {\n          const blankNumber = index + 1;\n          const options = exerciseData.sentences[0].blanks.find(blank => blank.number === blankNumber).options;\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: `blank${blankNumber}`,\n              value: answers[`blank${blankNumber}`],\n              onChange: handleChange,\n              list: `options${blankNumber}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: `options${blankNumber}`,\n              children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), word]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingExercise, \"1iioRJrckXxtkjYMSqmplRxa6Hc=\");\n_c = WritingExercise;\nexport default WritingExercise;\nvar _c;\n$RefreshReg$(_c, \"WritingExercise\");","map":{"version":3,"names":["React","useState","exerciseData","jsxDEV","_jsxDEV","WritingExercise","_s","answers","setAnswers","sentences","blanks","reduce","acc","curr","number","handleSubmit","event","preventDefault","correctAnswers","options","JSON","stringify","alert","handleChange","target","name","value","onSubmit","children","text","split","map","word","index","length","blankNumber","find","blank","type","onChange","list","fileName","_jsxFileName","lineNumber","columnNumber","id","option","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/WritingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport exerciseData from \"../data/writingData/data.json\";\r\n\r\nconst WritingExercise = () => {\r\n  const [answers, setAnswers] = useState(\r\n    exerciseData.sentences[0].blanks.reduce((acc, curr) => {\r\n      acc[`blank${curr.number}`] = \"\";\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Check if the answers are correct\r\n    const correctAnswers = exerciseData.sentences[0].blanks.reduce(\r\n      (acc, curr) => {\r\n        acc[`blank${curr.number}`] = curr.options[0];\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n    if (JSON.stringify(answers) === JSON.stringify(correctAnswers)) {\r\n      alert(\"Congratulations, you have completed the exercise!\");\r\n    } else {\r\n      alert(\"Sorry, some of your answers are incorrect. Please try again!\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <p>\r\n        {exerciseData.sentences[0].text.split(\"_\").map((word, index) => {\r\n          if (index === exerciseData.sentences[0].text.split(\"_\").length - 1) {\r\n            return word;\r\n          } else {\r\n            const blankNumber = index + 1;\r\n            const options = exerciseData.sentences[0].blanks.find(\r\n              (blank) => blank.number === blankNumber\r\n            ).options;\r\n            return (\r\n              <span key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  name={`blank${blankNumber}`}\r\n                  value={answers[`blank${blankNumber}`]}\r\n                  onChange={handleChange}\r\n                  list={`options${blankNumber}`}\r\n                />\r\n                <datalist id={`options${blankNumber}`}>\r\n                  {options.map((option, index) => (\r\n                    <option key={index} value={option} />\r\n                  ))}\r\n                </datalist>\r\n                {word}\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </p>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default WritingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}