{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\pages\\\\Reading\\\\ReadingExercise.jsx\",\n  _s = $RefreshSig$();\n// ReadingExercise.js\n\nimport React, { useState } from \"react\";\nimport Introduction from \"./Introduction\";\nimport Exercise from \"./Exercise\";\nimport { startExercise, calculateScore } from \"./exerciseLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReadingExercise() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const handleAnswerChange = (e, index) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = e.target.value;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (submitted) {\n      return;\n    }\n    const tempScore = calculateScore(questions, answers);\n    const percentage = Math.round(tempScore / questions.length * 100);\n    setScore(prevScore => prevScore + tempScore);\n    setSubmitted(true);\n    saveExerciseData(text, questions, answers, percentage);\n  };\n  const resetAnswers = () => {\n    setAnswers(new Array(questions.length).fill(\"\"));\n    setSubmitted(false);\n  };\n  const isSubmitDisabled = answers.includes(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reading Comprehension Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), text ? /*#__PURE__*/_jsxDEV(Exercise, {\n      text: text,\n      questions: questions,\n      answers: answers,\n      submitted: submitted,\n      handleAnswerChange: handleAnswerChange,\n      handleSubmit: handleSubmit,\n      isSubmitDisabled: isSubmitDisabled,\n      score: score,\n      resetAnswers: resetAnswers,\n      startExercise: () => startExercise(score, setText, setQuestions, setAnswers, setSubmitted)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Introduction, {\n      startExercise: () => startExercise(score, setText, setQuestions, setAnswers, setSubmitted)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ReadingExercise, \"PrNl7QnS9LUp67uQwUOBNuP+4ik=\");\n_c = ReadingExercise;\nexport default ReadingExercise;\nvar _c;\n$RefreshReg$(_c, \"ReadingExercise\");","map":{"version":3,"names":["React","useState","Introduction","Exercise","startExercise","calculateScore","jsxDEV","_jsxDEV","ReadingExercise","_s","text","setText","questions","setQuestions","answers","setAnswers","score","setScore","submitted","setSubmitted","handleAnswerChange","e","index","newAnswers","target","value","handleSubmit","preventDefault","tempScore","percentage","Math","round","length","prevScore","saveExerciseData","resetAnswers","Array","fill","isSubmitDisabled","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/pages/Reading/ReadingExercise.jsx"],"sourcesContent":["// ReadingExercise.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport Introduction from \"./Introduction\";\r\nimport Exercise from \"./Exercise\";\r\nimport { startExercise, calculateScore } from \"./exerciseLogic\";\r\n\r\nfunction ReadingExercise() {\r\n  const [text, setText] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleAnswerChange = (e, index) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index] = e.target.value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (submitted) {\r\n      return;\r\n    }\r\n\r\n    const tempScore = calculateScore(questions, answers);\r\n    const percentage = Math.round((tempScore / questions.length) * 100);\r\n\r\n    setScore((prevScore) => prevScore + tempScore);\r\n    setSubmitted(true);\r\n    saveExerciseData(text, questions, answers, percentage);\r\n  };\r\n\r\n  const resetAnswers = () => {\r\n    setAnswers(new Array(questions.length).fill(\"\"));\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const isSubmitDisabled = answers.includes(\"\");\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Reading Comprehension Exercise</h1>\r\n\r\n      {text ? (\r\n        <Exercise\r\n          text={text}\r\n          questions={questions}\r\n          answers={answers}\r\n          submitted={submitted}\r\n          handleAnswerChange={handleAnswerChange}\r\n          handleSubmit={handleSubmit}\r\n          isSubmitDisabled={isSubmitDisabled}\r\n          score={score}\r\n          resetAnswers={resetAnswers}\r\n          startExercise={() => startExercise(score, setText, setQuestions, setAnswers, setSubmitted)}\r\n        />\r\n      ) : (\r\n        <Introduction startExercise={() => startExercise(score, setText, setQuestions, setAnswers, setSubmitted)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}