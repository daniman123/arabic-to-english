{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\WritingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport exerciseData from '../data/writingData/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingExercise = () => {\n  _s();\n  const [exerciseData, setExerciseData] = useState(null);\n  const [sentenceIndex, setSentenceIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  setExerciseData(ex);\n  const handleAnswerChange = (blankNumber, value) => {\n    setAnswers({\n      ...answers,\n      [blankNumber]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Check if all blanks are filled before submitting\n    const allFilled = exerciseData.sentences[sentenceIndex].blanks.every(blank => answers[blank.number]);\n    if (allFilled) {\n      // Do something with the submitted answers\n      console.log(answers);\n      // Clear the answers for the next sentence\n      setAnswers({});\n      // Advance to the next sentence\n      setSentenceIndex(prevIndex => prevIndex < exerciseData.sentences.length - 1 ? prevIndex + 1 : prevIndex);\n    } else {\n      alert(\"Please fill in all blanks before submitting.\");\n    }\n  };\n  if (!exerciseData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  const sentence = exerciseData.sentences[sentenceIndex];\n  const blankInputs = sentence.blanks.map(blank => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `blank-${blank.number}`,\n      children: [\"Blank \", blank.number, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: `blank-${blank.number}`,\n      value: answers[blank.number] || \"\",\n      onChange: event => handleAnswerChange(blank.number, event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), blank.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, blank.number, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill in the Blanks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: sentence.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), blankInputs, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingExercise, \"lU26MTmWocRy1JZist6elFzUf1s=\");\n_c = WritingExercise;\nexport default WritingExercise;\nvar _c;\n$RefreshReg$(_c, \"WritingExercise\");","map":{"version":3,"names":["React","useState","useEffect","exerciseData","jsxDEV","_jsxDEV","WritingExercise","_s","setExerciseData","sentenceIndex","setSentenceIndex","answers","setAnswers","ex","handleAnswerChange","blankNumber","value","handleSubmit","event","preventDefault","allFilled","sentences","blanks","every","blank","number","console","log","prevIndex","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","sentence","blankInputs","map","htmlFor","id","onChange","target","options","option","onSubmit","text","type","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/WritingExercise.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport exerciseData from '../data/writingData/data.json'\r\n\r\nconst WritingExercise = () => {\r\n  const [exerciseData, setExerciseData] = useState(null);\r\n  const [sentenceIndex, setSentenceIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n\r\n    setExerciseData(ex)\r\n\r\n  const handleAnswerChange = (blankNumber, value) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [blankNumber]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Check if all blanks are filled before submitting\r\n    const allFilled = exerciseData.sentences[sentenceIndex].blanks.every(\r\n      (blank) => answers[blank.number]\r\n    );\r\n    if (allFilled) {\r\n      // Do something with the submitted answers\r\n      console.log(answers);\r\n      // Clear the answers for the next sentence\r\n      setAnswers({});\r\n      // Advance to the next sentence\r\n      setSentenceIndex((prevIndex) =>\r\n        prevIndex < exerciseData.sentences.length - 1\r\n          ? prevIndex + 1\r\n          : prevIndex\r\n      );\r\n    } else {\r\n      alert(\"Please fill in all blanks before submitting.\");\r\n    }\r\n  };\r\n\r\n  if (!exerciseData) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  const sentence = exerciseData.sentences[sentenceIndex];\r\n  const blankInputs = sentence.blanks.map((blank) => (\r\n    <div key={blank.number}>\r\n      <label htmlFor={`blank-${blank.number}`}>Blank {blank.number}:</label>\r\n      <select\r\n        id={`blank-${blank.number}`}\r\n        value={answers[blank.number] || \"\"}\r\n        onChange={(event) =>\r\n          handleAnswerChange(blank.number, event.target.value)\r\n        }\r\n      >\r\n        <option value=\"\">Select an option</option>\r\n        {blank.options.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <h2>Fill in the Blanks</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <p>{sentence.text}</p>\r\n        {blankInputs}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}