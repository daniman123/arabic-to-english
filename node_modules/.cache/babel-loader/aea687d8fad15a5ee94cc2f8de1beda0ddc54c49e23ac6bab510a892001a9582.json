{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\WritingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport exerciseData from \"../data/writingData/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingExercise = () => {\n  _s();\n  const [sentence, setSentence] = useState(\"\");\n  const [choices, setChoices] = useState(\"\");\n  const startExercise = () => {\n    setSentence(exerciseData[getRandomIndex()].sentence);\n    setChoices(sentence.choices);\n  };\n  const getRandomIndex = () => {\n    return Math.floor(Math.random() * exerciseData.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WritingExercise__container\",\n    children: sentence ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writingExercise\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choices\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: choices.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: option.option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startExercise,\n      children: \"Start Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingExercise, \"rRmmz18OyHMxmBieRVLVWxsLvYE=\");\n_c = WritingExercise;\nexport default WritingExercise;\nvar _c;\n$RefreshReg$(_c, \"WritingExercise\");","map":{"version":3,"names":["React","useState","exerciseData","jsxDEV","_jsxDEV","WritingExercise","_s","sentence","setSentence","choices","setChoices","startExercise","getRandomIndex","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/WritingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport exerciseData from \"../data/writingData/data.json\";\r\n\r\nconst WritingExercise = () => {\r\n  const [sentence, setSentence] = useState(\"\");\r\n  const [choices, setChoices] = useState(\"\");\r\n\r\n  const startExercise = () => {\r\n    setSentence(exerciseData[getRandomIndex()].sentence);\r\n    setChoices(sentence.choices);\r\n  };\r\n\r\n  const getRandomIndex = () => {\r\n    return Math.floor(Math.random() * exerciseData.length);\r\n  };\r\n  return (\r\n    <div className=\"WritingExercise__container\">\r\n      {sentence ? (\r\n        <div className=\"writingExercise\">\r\n          <div className=\"sentence\">{sentence}</div>\r\n          <div className=\"choices\">\r\n            <ul>\r\n              {choices.map((option, index) => (\r\n                <li key={index}>{option.option}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <button onClick={startExercise}>Start Exercise</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default WritingExercise;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,YAAY,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1BH,WAAW,CAACN,YAAY,CAACU,cAAc,EAAE,CAAC,CAACL,QAAQ,CAAC;IACpDG,UAAU,CAACH,QAAQ,CAACE,OAAO,CAAC;EAC9B,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGb,YAAY,CAACc,MAAM,CAAC;EACxD,CAAC;EACD,oBACEZ,OAAA;IAAKa,SAAS,EAAC,4BAA4B;IAAAC,QAAA,EACxCX,QAAQ,gBACPH,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bd,OAAA;QAAKa,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEX;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC1ClB,OAAA;QAAKa,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBd,OAAA;UAAAc,QAAA,EACGT,OAAO,CAACc,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBrB,OAAA;YAAAc,QAAA,EAAiBM,MAAM,CAACA;UAAM,GAArBC,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,gBAENlB,OAAA;MAAQsB,OAAO,EAAEf,aAAc;MAAAO,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAChB,EAAA,CA9BID,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}