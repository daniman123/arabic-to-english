{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\pages\\\\Reading\\\\ReadingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getRandomData, resetExerciseData, saveExerciseData } from \"./ExerciseData\";\nimport Introduction from \"./Introduction\";\nimport Exercise from \"./Exercise\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReadingExercise() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const startExercise = () => {\n    const randomData = getRandomData(score || 0);\n    if (!randomData) {\n      resetExerciseData();\n      setText(\"\");\n      setQuestions([]);\n      setAnswers([]);\n      setSubmitted(false);\n      return;\n    }\n    setText(randomData.text);\n    setQuestions(randomData.questions);\n    setAnswers(new Array(randomData.questions.length).fill(\"\"));\n    setSubmitted(false);\n  };\n  const handleAnswerChange = (e, index) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = e.target.value;\n    setAnswers(newAnswers);\n  };\n  const calculateScore = (questions, answers) => {\n    return answers.reduce((acc, answer, index) => {\n      return answer === questions[index].answer ? acc + 1 : acc;\n    }, 0);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (submitted) {\n      return;\n    }\n    const tempScore = calculateScore(questions, answers);\n    const percentage = Math.round(tempScore / questions.length * 100);\n    setScore(prevScore => prevScore + tempScore);\n    setSubmitted(true);\n    saveExerciseData(text, questions, answers, percentage);\n  };\n  const resetAnswers = () => {\n    setAnswers(new Array(questions.length).fill(\"\"));\n    setSubmitted(false);\n  };\n  const isSubmitDisabled = answers.includes(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reading Comprehension Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), text ? /*#__PURE__*/_jsxDEV(Exercise, {\n      text: text,\n      questions: questions,\n      answers: answers,\n      submitted: submitted,\n      handleAnswerChange: handleAnswerChange,\n      handleSubmit: handleSubmit,\n      isSubmitDisabled: isSubmitDisabled,\n      score: score,\n      resetAnswers: resetAnswers,\n      startExercise: startExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Introduction, {\n      startExercise: startExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(ReadingExercise, \"PrNl7QnS9LUp67uQwUOBNuP+4ik=\");\n_c = ReadingExercise;\nexport default ReadingExercise;\nvar _c;\n$RefreshReg$(_c, \"ReadingExercise\");","map":{"version":3,"names":["React","useState","getRandomData","resetExerciseData","saveExerciseData","Introduction","Exercise","jsxDEV","_jsxDEV","ReadingExercise","_s","text","setText","questions","setQuestions","answers","setAnswers","score","setScore","submitted","setSubmitted","startExercise","randomData","Array","length","fill","handleAnswerChange","e","index","newAnswers","target","value","calculateScore","reduce","acc","answer","handleSubmit","preventDefault","tempScore","percentage","Math","round","prevScore","resetAnswers","isSubmitDisabled","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/pages/Reading/ReadingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  getRandomData,\r\n  resetExerciseData,\r\n  saveExerciseData,\r\n} from \"./ExerciseData\";\r\nimport Introduction from \"./Introduction\";\r\nimport Exercise from \"./Exercise\";\r\n\r\nfunction ReadingExercise() {\r\n  const [text, setText] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const startExercise = () => {\r\n    const randomData = getRandomData(score || 0);\r\n\r\n    if (!randomData) {\r\n      resetExerciseData();\r\n      setText(\"\");\r\n      setQuestions([]);\r\n      setAnswers([]);\r\n      setSubmitted(false);\r\n      return;\r\n    }\r\n\r\n    setText(randomData.text);\r\n    setQuestions(randomData.questions);\r\n    setAnswers(new Array(randomData.questions.length).fill(\"\"));\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const handleAnswerChange = (e, index) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index] = e.target.value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const calculateScore = (questions, answers) => {\r\n    return answers.reduce((acc, answer, index) => {\r\n      return answer === questions[index].answer ? acc + 1 : acc;\r\n    }, 0);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (submitted) {\r\n      return;\r\n    }\r\n\r\n    const tempScore = calculateScore(questions, answers);\r\n    const percentage = Math.round((tempScore / questions.length) * 100);\r\n\r\n    setScore((prevScore) => prevScore + tempScore);\r\n    setSubmitted(true);\r\n    saveExerciseData(text, questions, answers, percentage);\r\n  };\r\n\r\n  const resetAnswers = () => {\r\n    setAnswers(new Array(questions.length).fill(\"\"));\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const isSubmitDisabled = answers.includes(\"\");\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Reading Comprehension Exercise</h1>\r\n\r\n      {text ? (\r\n        <Exercise\r\n          text={text}\r\n          questions={questions}\r\n          answers={answers}\r\n          submitted={submitted}\r\n          handleAnswerChange={handleAnswerChange}\r\n          handleSubmit={handleSubmit}\r\n          isSubmitDisabled={isSubmitDisabled}\r\n          score={score}\r\n          resetAnswers={resetAnswers}\r\n          startExercise={startExercise}\r\n        />\r\n      ) : (\r\n        <Introduction startExercise={startExercise} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadingExercise;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,aAAa,EACbC,iBAAiB,EACjBC,gBAAgB,QACX,gBAAgB;AACvB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,UAAU,GAAGpB,aAAa,CAACe,KAAK,IAAI,CAAC,CAAC;IAE5C,IAAI,CAACK,UAAU,EAAE;MACfnB,iBAAiB,EAAE;MACnBS,OAAO,CAAC,EAAE,CAAC;MACXE,YAAY,CAAC,EAAE,CAAC;MAChBE,UAAU,CAAC,EAAE,CAAC;MACdI,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEAR,OAAO,CAACU,UAAU,CAACX,IAAI,CAAC;IACxBG,YAAY,CAACQ,UAAU,CAACT,SAAS,CAAC;IAClCG,UAAU,CAAC,IAAIO,KAAK,CAACD,UAAU,CAACT,SAAS,CAACW,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3DL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMM,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACvC,MAAMC,UAAU,GAAG,CAAC,GAAGd,OAAO,CAAC;IAC/Bc,UAAU,CAACD,KAAK,CAAC,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK;IAClCf,UAAU,CAACa,UAAU,CAAC;EACxB,CAAC;EAED,MAAMG,cAAc,GAAGA,CAACnB,SAAS,EAAEE,OAAO,KAAK;IAC7C,OAAOA,OAAO,CAACkB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,EAAEP,KAAK,KAAK;MAC5C,OAAOO,MAAM,KAAKtB,SAAS,CAACe,KAAK,CAAC,CAACO,MAAM,GAAGD,GAAG,GAAG,CAAC,GAAGA,GAAG;IAC3D,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,MAAME,YAAY,GAAIT,CAAC,IAAK;IAC1BA,CAAC,CAACU,cAAc,EAAE;IAElB,IAAIlB,SAAS,EAAE;MACb;IACF;IAEA,MAAMmB,SAAS,GAAGN,cAAc,CAACnB,SAAS,EAAEE,OAAO,CAAC;IACpD,MAAMwB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAEH,SAAS,GAAGzB,SAAS,CAACW,MAAM,GAAI,GAAG,CAAC;IAEnEN,QAAQ,CAAEwB,SAAS,IAAKA,SAAS,GAAGJ,SAAS,CAAC;IAC9ClB,YAAY,CAAC,IAAI,CAAC;IAClBhB,gBAAgB,CAACO,IAAI,EAAEE,SAAS,EAAEE,OAAO,EAAEwB,UAAU,CAAC;EACxD,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB3B,UAAU,CAAC,IAAIO,KAAK,CAACV,SAAS,CAACW,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChDL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMwB,gBAAgB,GAAG7B,OAAO,CAAC8B,QAAQ,CAAC,EAAE,CAAC;EAE7C,oBACErC,OAAA;IAAKsC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvC,OAAA;MAAAuC,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEtCxC,IAAI,gBACHH,OAAA,CAACF,QAAQ;MACPK,IAAI,EAAEA,IAAK;MACXE,SAAS,EAAEA,SAAU;MACrBE,OAAO,EAAEA,OAAQ;MACjBI,SAAS,EAAEA,SAAU;MACrBO,kBAAkB,EAAEA,kBAAmB;MACvCU,YAAY,EAAEA,YAAa;MAC3BQ,gBAAgB,EAAEA,gBAAiB;MACnC3B,KAAK,EAAEA,KAAM;MACb0B,YAAY,EAAEA,YAAa;MAC3BtB,aAAa,EAAEA;IAAc;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,gBAEF3C,OAAA,CAACH,YAAY;MAACgB,aAAa,EAAEA;IAAc;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACzC,EAAA,CAjFQD,eAAe;AAAA2C,EAAA,GAAf3C,eAAe;AAmFxB,eAAeA,eAAe;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}