{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\components\\\\WritingExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport exerciseData from \"../data/writingData/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingExercise = () => {\n  _s();\n  const [exercise, setExercise] = useState({\n    index: 0,\n    sentence: \"\",\n    choices: []\n  });\n  const [answers, setAnswers] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const getRandomIndex = () => Math.floor(Math.random() * exerciseData.length);\n  const startExercise = () => {\n    const index = getRandomIndex();\n    const currentExercise = exerciseData[index];\n    setExercise({\n      index,\n      sentence: currentExercise.sentence,\n      choices: currentExercise.choices\n    });\n    setAnswers([]);\n    setSubmitted(false);\n    setIsCorrect(false);\n  };\n  const handleAnswerChange = (e, index) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = e.target.value;\n    setAnswers(newAnswers);\n  };\n  const isSubmitDisabled = answers.includes(\"\");\n  const submitAnswers = e => {\n    e.preventDefault();\n    if (submitted) return;\n    setSubmitted(true);\n    const exerciseAnswers = writingData[exercise.index];\n    if (!exerciseAnswers) {\n      setIsCorrect(false);\n      return;\n    }\n    const correctAnswers = exerciseAnswers.answer;\n    const isCorrect = correctAnswers.every((answer, index) => answer === answers[index]);\n    setIsCorrect(isCorrect);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WritingExercise__container\",\n    children: exercise.sentence ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writingExercise\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: exercise.sentence.split(\" \").map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://translate.google.com/#en/ar/${word}`,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitAnswers,\n        children: [exercise.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [choice.number, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), choice.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: option,\n              checked: answers[index] === option,\n              onChange: e => handleAnswerChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), option]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this))]\n        }, choice.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitDisabled,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [isCorrect ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"correct\",\n          children: \"Correct!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"incorrect\",\n          children: \"Incorrect.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startExercise,\n          children: \"Next Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startExercise,\n      children: \"Start Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingExercise, \"PWHpK++XzdP4Im4eCL1rNtNlr/c=\");\n_c = WritingExercise;\nexport default WritingExercise;\nvar _c;\n$RefreshReg$(_c, \"WritingExercise\");","map":{"version":3,"names":["React","useState","exerciseData","jsxDEV","_jsxDEV","WritingExercise","_s","exercise","setExercise","index","sentence","choices","answers","setAnswers","submitted","setSubmitted","isCorrect","setIsCorrect","getRandomIndex","Math","floor","random","length","startExercise","currentExercise","handleAnswerChange","e","newAnswers","target","value","isSubmitDisabled","includes","submitAnswers","preventDefault","exerciseAnswers","writingData","correctAnswers","answer","every","className","children","split","map","word","href","rel","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","choice","number","options","option","optionIndex","type","checked","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/components/WritingExercise.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport exerciseData from \"../data/writingData/data.json\";\r\n\r\nconst WritingExercise = () => {\r\nconst [exercise, setExercise] = useState({\r\nindex: 0,\r\nsentence: \"\",\r\nchoices: [],\r\n});\r\nconst [answers, setAnswers] = useState([]);\r\nconst [submitted, setSubmitted] = useState(false);\r\nconst [isCorrect, setIsCorrect] = useState(false);\r\n\r\nconst getRandomIndex = () => Math.floor(Math.random() * exerciseData.length);\r\n\r\nconst startExercise = () => {\r\nconst index = getRandomIndex();\r\nconst currentExercise = exerciseData[index];\r\nsetExercise({\r\nindex,\r\nsentence: currentExercise.sentence,\r\nchoices: currentExercise.choices,\r\n});\r\nsetAnswers([]);\r\nsetSubmitted(false);\r\nsetIsCorrect(false);\r\n};\r\n\r\nconst handleAnswerChange = (e, index) => {\r\nconst newAnswers = [...answers];\r\nnewAnswers[index] = e.target.value;\r\nsetAnswers(newAnswers);\r\n};\r\n\r\nconst isSubmitDisabled = answers.includes(\"\");\r\n\r\nconst submitAnswers = (e) => {\r\ne.preventDefault();\r\nif (submitted) return;\r\nsetSubmitted(true);\r\n\r\n    const exerciseAnswers = writingData[exercise.index];\r\n    if (!exerciseAnswers) {\r\n      setIsCorrect(false);\r\n      return;\r\n    }\r\n\r\n    const correctAnswers = exerciseAnswers.answer;\r\n    const isCorrect = correctAnswers.every(\r\n      (answer, index) => answer === answers[index]\r\n    );\r\n\r\n    setIsCorrect(isCorrect);\r\n  };\r\n\r\n  return (\r\n    <div className=\"WritingExercise__container\">\r\n      {exercise.sentence ? (\r\n        <div className=\"writingExercise\">\r\n          <p>\r\n            {exercise.sentence.split(\" \").map((word, index) => (\r\n              <span key={index}>\r\n                <a\r\n                  href={`https://translate.google.com/#en/ar/${word}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  {word}\r\n                </a>{\" \"}\r\n              </span>\r\n            ))}\r\n          </p>\r\n          <form onSubmit={submitAnswers}>\r\n            {exercise.choices.map((choice, index) => (\r\n              <div key={choice.number}>\r\n                <p>{choice.number}. </p>\r\n                {choice.options.map((option, optionIndex) => (\r\n                  <label key={optionIndex}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      value={option}\r\n                      checked={answers[index] === option}\r\n                      onChange={(e) => handleAnswerChange(e, index)}\r\n                    />\r\n                    {option}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            ))}\r\n            <button type=\"submit\" disabled={isSubmitDisabled}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n\r\n          {submitted && (\r\n            <div className=\"result\">\r\n              {isCorrect ? (\r\n                <p className=\"correct\">Correct!</p>\r\n              ) : (\r\n                <p className=\"incorrect\">Incorrect.</p>\r\n              )}\r\n              <button onClick={startExercise}>Next Exercise</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <button onClick={startExercise}>Start Exercise</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}