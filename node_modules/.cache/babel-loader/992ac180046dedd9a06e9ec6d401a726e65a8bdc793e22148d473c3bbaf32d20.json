{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\Desktop\\\\Apps\\\\arabic-to-english\\\\src\\\\pages\\\\Home\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [isNavClicked, setIsNavClicked] = useState(false);\n  const handleNavClick = () => {\n    setIsNavClicked(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isNavClicked ? \"nav-clicked\" : \"nav\",\n      onClick: handleNavClick,\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/vocabulary-exercise\",\n              children: \"Vocabulary Exercises\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/reading-exercise\",\n              children: \"Reading Exercises\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/writing-exercise\",\n              children: \"Writing Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Navbar, \"7wgzzR6ggvJyMSXnh1oW59ZTqXA=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","isNavClicked","setIsNavClicked","handleNavClick","children","className","onClick","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danie/Desktop/Apps/arabic-to-english/src/pages/Home/Navbar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  const [isNavClicked, setIsNavClicked] = useState(false);\r\n\r\n  const handleNavClick = () => {\r\n    setIsNavClicked(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={isNavClicked ? \"nav-clicked\" : \"nav\"}\r\n        onClick={handleNavClick}\r\n      >\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/vocabulary-exercise\">Vocabulary Exercises</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/reading-exercise\">Reading Exercises</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/writing-exercise\">Writing Exercise</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3BD,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA;MACES,SAAS,EAAEJ,YAAY,GAAG,aAAa,GAAG,KAAM;MAChDK,OAAO,EAAEH,cAAe;MAAAC,QAAA,eAExBR,OAAA;QAAAQ,QAAA,eACER,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAAQ,QAAA,eACER,OAAA,CAACF,IAAI;cAACa,EAAE,EAAC,sBAAsB;cAAAH,QAAA,EAAC;YAAoB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACxD,eACLf,OAAA;YAAAQ,QAAA,eACER,OAAA,CAACF,IAAI;cAACa,EAAE,EAAC,mBAAmB;cAAAH,QAAA,EAAC;YAAiB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClD,eACLf,OAAA;YAAAQ,QAAA,eACER,OAAA,CAACF,IAAI;cAACa,EAAE,EAAC,mBAAmB;cAAAH,QAAA,EAAC;YAAgB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACjD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEP;AAACX,EAAA,CA7BQD,MAAM;AAAAa,EAAA,GAANb,MAAM;AA+Bf,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}