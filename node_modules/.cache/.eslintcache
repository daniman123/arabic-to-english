[{"C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\index.js":"1","C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\App.js":"2","C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\reportWebVitals.js":"3","C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\components\\ReadingExercise.jsx":"4","C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\components\\CommonWords.jsx":"5","C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\functions\\exerciseLevelTracker.js":"6"},{"size":358,"mtime":1680263695714,"results":"7","hashOfConfig":"8"},{"size":987,"mtime":1680286107364,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1679622697064,"results":"10","hashOfConfig":"8"},{"size":7325,"mtime":1680385218247,"results":"11","hashOfConfig":"8"},{"size":1440,"mtime":1680277165112,"results":"12","hashOfConfig":"8"},{"size":2397,"mtime":1680377577361,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gveawz",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\index.js",[],[],"C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\App.js",[],[],"C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\reportWebVitals.js",[],[],"C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\components\\ReadingExercise.jsx",["33"],[],"import React, { useState } from \"react\";\r\n\r\nimport dater from \"../data/readingData/data.json\";\r\nimport beginner from \"../data/readingData/beginner.json\";\r\nimport intermediate from \"../data/readingData/intermediate.json\";\r\nimport advanced from \"../data/readingData/advanced.json\";\r\n\r\nimport JSONData from \"../functions/exerciseLevelTracker\";\r\n\r\nfunction ReadingExercise() {\r\n  const [text, setText] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n\r\n  const getLength = (data) => {\r\n    const jsonDataObj = new JSONData(data);\r\n    const rank = jsonDataObj.getTextsLengthRanking();\r\n    // console.log(rank);\r\n  };\r\n\r\n  getLength(dater);\r\n\r\n  const handleDifficultyChange = (difficulty) => {\r\n    setDifficulty(difficulty);\r\n  };\r\n\r\n  const startExercise = () => {\r\n    const texts = getTextsByDifficulty(difficulty);\r\n    const availableData = filterCompletedTexts(texts);\r\n    const filteredData = filterTextsByLength(availableData);\r\n    const randomData = getRandomData(filteredData);\r\n\r\n    if (!randomData) {\r\n      resetExerciseData();\r\n      return;\r\n    }\r\n\r\n    setText(randomData.text);\r\n    setQuestions(randomData.questions);\r\n    setAnswers(new Array(randomData.questions.length).fill(\"\"));\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const getTextsByDifficulty = (difficulty) => {\r\n    switch (difficulty) {\r\n      case \"beginner\":\r\n        return beginner;\r\n      case \"intermediate\":\r\n        return intermediate;\r\n      case \"advanced\":\r\n        return advanced;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const filterCompletedTexts = (texts) => {\r\n    const completedData =\r\n      JSON.parse(sessionStorage.getItem(\"readingExerciseData\")) || [];\r\n    return texts.filter(\r\n      (text) => !completedData.some((data) => data.text === text.text)\r\n    );\r\n  };\r\n\r\n  const filterTextsByLength = (texts) => {\r\n    const maxLength = score < 10 ? 100 : Infinity;\r\n    const minLength = score >= 17 ? 150 : 0;\r\n    return texts.filter(\r\n      (data) => data.text.length >= minLength && data.text.length <= maxLength\r\n    );\r\n  };\r\n\r\n  const getRandomData = (data) => {\r\n    return data.length > 0\r\n      ? data[Math.floor(Math.random() * data.length)]\r\n      : null;\r\n  };\r\n\r\n  const resetExerciseData = () => {\r\n    sessionStorage.removeItem(\"readingExerciseData\");\r\n  };\r\n\r\n  const handleAnswerChange = (e, index) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index] = e.target.value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const renderQuestion = (question, index) => (\r\n    <div key={index}>\r\n      <p>\r\n        <span>\r\n          <a\r\n            href={`https://translate.google.com/#en/ar/${question.question}`}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {question.question}\r\n          </a>{\" \"}\r\n        </span>\r\n      </p>\r\n      {question.options.map((option, optionIndex) => (\r\n        <label\r\n          key={optionIndex}\r\n          className={\r\n            submitted\r\n              ? option === question.answer\r\n                ? \"correct\"\r\n                : \"incorrect\"\r\n              : \"\"\r\n          }\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            name={`question-${index}`}\r\n            value={option}\r\n            checked={answers[index] === option}\r\n            onChange={(e) => handleAnswerChange(e, index)}\r\n          />\r\n          {option}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (submitted) {\r\n      return;\r\n    }\r\n\r\n    const totalQuestions = questions.length;\r\n    const tempScore = answers.reduce((acc, answer, index) => {\r\n      return answer === questions[index].answer ? acc + 1 : acc;\r\n    }, 0);\r\n    const percentage = Math.round((tempScore / totalQuestions) * 100);\r\n\r\n    setScore((prevScore) => prevScore + tempScore);\r\n    setSubmitted(true);\r\n\r\n    const data =\r\n      JSON.parse(window.sessionStorage.getItem(\"readingExerciseData\")) || [];\r\n    const newData = {\r\n      text,\r\n      questions,\r\n      answers,\r\n      percentage,\r\n    };\r\n    data.push(newData);\r\n    window.sessionStorage.setItem(\"readingExerciseData\", JSON.stringify(data));\r\n  };\r\n\r\n  const resetAnswers = () => {\r\n    setAnswers(new Array(questions.length).fill(\"\"));\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const isSubmitDisabled = answers.includes(\"\");\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Reading Comprehension Exercise</h1>\r\n\r\n      {text ? (\r\n        <div>\r\n          <p className=\"text\">\r\n            {text.split(\" \").map((word, index) => (\r\n              <span key={index}>\r\n                <a\r\n                  href={`https://translate.google.com/#en/ar/${word}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  {word}\r\n                </a>{\" \"}\r\n              </span>\r\n            ))}\r\n          </p>\r\n          <form onSubmit={handleSubmit}>\r\n            {questions.map(renderQuestion)}\r\n            <br />\r\n            <button type=\"submit\" disabled={isSubmitDisabled}>\r\n              Submit\r\n            </button>\r\n            <p>Your score: {score} / 30</p>\r\n          </form>\r\n          <button\r\n            className=\"next_exercise\"\r\n            onClick={() => {\r\n              resetAnswers();\r\n              startExercise();\r\n            }}\r\n          >\r\n            Next Exercise\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <p>اقرأ النص ثم أجب على الأسئلة حول النص</p>\r\n          <p>\"Start Exercise\" اختر صعوبة وانقر</p>\r\n          <br></br>\r\n          <div className=\"sidebar\">\r\n            <p>Select difficulty:</p>\r\n            <ul>\r\n              <li>\r\n                <button\r\n                  className={\r\n                    difficulty === \"beginner\"\r\n                      ? \"difficulty__active\"\r\n                      : \"difficulty\"\r\n                  }\r\n                  onClick={() => handleDifficultyChange(\"beginner\")}\r\n                >\r\n                  Beginner\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={\r\n                    difficulty === \"intermediate\"\r\n                      ? \"difficulty__active\"\r\n                      : \"difficulty\"\r\n                  }\r\n                  onClick={() => handleDifficultyChange(\"intermediate\")}\r\n                >\r\n                  Intermediate\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={\r\n                    difficulty === \"advanced\"\r\n                      ? \"difficulty__active\"\r\n                      : \"difficulty\"\r\n                  }\r\n                  onClick={() => handleDifficultyChange(\"advanced\")}\r\n                >\r\n                  Advanced\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <button className=\"start_exercise\" onClick={startExercise}>\r\n            Start Exercise\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadingExercise;\r\n","C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\components\\CommonWords.jsx",[],[],"C:\\Users\\Danie\\Desktop\\Apps\\arabic-to-english\\src\\functions\\exerciseLevelTracker.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":20,"column":11,"nodeType":"36","messageId":"37","endLine":20,"endColumn":15},"no-unused-vars","'rank' is assigned a value but never used.","Identifier","unusedVar"]